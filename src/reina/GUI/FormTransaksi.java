/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package reina.GUI;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import reina.quiz2.*;

/**
 *
 * @author WINDOWS 10
 */
public class FormTransaksi extends javax.swing.JFrame {
    private int id = 0; //variabel id untuk kode transaksi
    private String code; //variabel kode untuk kode transaksi
    private DefaultComboBoxModel cbModel; //jComboBox model
    private DefaultTableModel tbModel; //jTable model
    private ArrayList<Item> belanja = new ArrayList<>(); //variabel belanja untuk menyimpan item transaksi

    /**
     * Creates new form TransaksiForm
     */
    
    //konstruktor
    public FormTransaksi() {
        TransCombo comboModel = new TransCombo();
        this.cbModel = new DefaultComboBoxModel<>(comboModel.getNama().toArray()); //mengeset items combo
        TransTable tableModel = new TransTable();
        this.tbModel = new DefaultTableModel(tableModel.getKolomNama(), 0); //mengeset kolom nama
        initComponents();
    }
    
    //penambahan id
    private void incId(){
        this.id += 1;
    }
    
    //pengurangan id
    private void decId(){
        this.id -= 1;
    }
    
    //set fungsi code
    private String setCode(){
        this.incId();
        String string = new SimpleDateFormat("yyMMdd").format(new Date());
        this.code = String.format(string + "%o2d", this.id);
        return code;
    }
    
    //menyimpan item nama, harga, dan jumlah
    private Object[] addItem (String nama , int jumlah) {
        float harga =0;
         TransCombo items = new TransCombo() ;
        for (int i = 0; i < items.getNama().size(); i++) {
            if (nama.equalsIgnoreCase(items.getNama().get(i))) {
                harga = items.getHarga().get(i) ;
            }
        }
        Object[] obj = {
            nama ,
            harga ,
            jumlah ,
        } ;
        return obj ;
    }
    
    //mengupdate fungsi jumlah
    private void updateJumlah (String nama , int add) {
        ArrayList<String> item = new ArrayList<> () ;
        for (int i = 0; i < tbModel.getRowCount(); i++) {
            item.add (tbModel.getValueAt (i , 0).toString()) ;
        }
        for (int i = 0; i < item.size(); i++) {
            if (item.get(i).equals(nama)) {
                int jumlah = new Integer (tbModel.getValueAt (i , 2).toString()) ;
                tbModel.setValueAt (jumlah+add , i , 2) ;
            }
        }
    }
    
    //mengecek apa ada item double yang terpilih pada item sebelumnya
    private boolean isDuplicate (String nama) {
        boolean result = false ;
        ArrayList <String> item = new ArrayList<>() ;
        for (int i = 0; i < tbModel.getRowCount(); i++) {
            item.add (tbModel.getValueAt(i, 0).toString()) ;
        }
        for (String i : item) {
            if (i.equals(nama)) {
                result = true ;
            }
        }
        return result ;
    }
    
    //mengecek jika ada isi tabel yang kosong
    private boolean isEmpty() {
       return this.tableTransaksi.getModel().getRowCount() <= 0;
    }
    
    //mendisable tombol remove dan save jika ada isi tabel kosong yang kosong
    private void belanja() {
        if (isEmpty()) {
            this.saveButton.setEnabled(false) ;
            this.removeButton.setEnabled(false) ;
        } else {
            this.saveButton.setEnabled(true) ;
            this.removeButton.setEnabled(true) ;
        }
    }
    
    //melakukan transaksi baru jika sudah menyelesaikan transaksi sebelumnya
    private void transaksiBaru () {
        this.jumlahText.setText(" ") ;
        this.codeText.setText(" ") ;
        this.newButton.setEnabled(true) ;
        this.saveButton.setEnabled(false) ;
        this.cancelButton.setEnabled(false) ;
        this.addButton.setEnabled(false) ;
        this.removeButton.setEnabled(false) ;
        this.removeButton.setEnabled(false) ;
        this.jumlahText.setEnabled(false) ;
        this.itemsComboBox.setEnabled(false) ;
        this.tbModel.setRowCount(0) ;
        this.belanja.clear() ;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        codeLabel = new javax.swing.JLabel();
        itemsLabel = new javax.swing.JLabel();
        codeText = new javax.swing.JTextField();
        itemsComboBox = new javax.swing.JComboBox<>();
        jumlahText = new javax.swing.JTextField();
        newButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableTransaksi = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        codeLabel.setText("Code");

        itemsLabel.setText("Items");

        itemsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kopi", "Gula", "Susu" }));
        itemsComboBox.setSelectedIndex(-1);

        newButton.setText("New");
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        tableTransaksi.setModel(this.tbModel);
        jScrollPane2.setViewportView(tableTransaksi);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(codeLabel)
                        .addGap(18, 18, 18)
                        .addComponent(codeText, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(newButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(itemsLabel)
                        .addGap(14, 14, 14)
                        .addComponent(itemsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jumlahText, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codeLabel)
                    .addComponent(codeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemsLabel)
                    .addComponent(itemsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jumlahText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removeButton)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(cancelButton))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try {
            //looping untuk setiap tabel
            for (int i = 0; i < tbModel.getRowCount(); i++) {
                // menyimpan nama item dan jumlah item menjadi variable
                String nama = tbModel.getValueAt (i , 0).toString () ;
                float harga = new Float (tbModel.getValueAt(i , 1).toString()) ;
                int jumlah = new Integer (tbModel.getValueAt (i , 2).toString()) ;
                this.belanja.add (new Item(nama , harga , jumlah)) ;   
            }
            //instansiasi kelas Transaksi dengan kode dan menjalankan penyimpanan belanja
            Transaksi transaksi = new Transaksi(this.code, this.belanja);
            //Stringbuilder untuk menangani output Transaksi
            StringBuilder sbr = new StringBuilder() ;
            //menambahkan hasil transaksi
            sbr.append(transaksi.printDetail()) ;
            //memanggil dialog dengan StringBuilder
            JOptionPane.showMessageDialog(this , sbr , "Transaksi" , JOptionPane.INFORMATION_MESSAGE) ;
            //untuk melakukan transaksi baru
            transaksiBaru () ;
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        transaksiBaru();
        this.decId();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        //mengecek apa ada baris yang dipilih
        if (tableTransaksi.getSelectedRow() <0) {
            //jika tidak ada , maka akan muncul pesan
            String sbr = "Pilihlah item yang akan dihapus";
            JOptionPane.showMessageDialog(this , sbr , "Information" , JOptionPane.INFORMATION_MESSAGE) ;  
        } else {
            //jika ternyata ada baris yg dipilih , maka baris tersebut akan dihapus
            int count = tableTransaksi.getSelectedRows().length ;
            for (int i = 0; i < count; i++) {
                tbModel.removeRow(tableTransaksi.getSelectedRow()) ;
            }
            
        }
        this.belanja();
    }//GEN-LAST:event_removeButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        //mendapatkan item yang telah dipilih
        String nama = this.itemsComboBox.getSelectedItem().toString() ;
        //jumlahText disetting sebagai Integer
        int jumlah = new Integer (this.jumlahText.getText()) ;
        //mengecek apakah suatu barang ada yang double atau tidak
        if (isDuplicate(nama)) {
            updateJumlah(nama, jumlah);
        } else {
            tbModel.addRow(addItem(nama, jumlah)); 
        }
        this.belanja();
    }//GEN-LAST:event_addButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        this.jumlahText.setText ("1") ;
        this.newButton.setEnabled (false) ;
        this.cancelButton.setEnabled (true) ;
        this.addButton.setEnabled (true) ;
        this.jumlahText.setEnabled (true) ;
        this.itemsComboBox.setEnabled (true) ;
        this.codeText.setText (this.setCode()) ;
    }//GEN-LAST:event_newButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormTransaksi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel codeLabel;
    private javax.swing.JTextField codeText;
    private javax.swing.JComboBox<String> itemsComboBox;
    private javax.swing.JLabel itemsLabel;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jumlahText;
    private javax.swing.JButton newButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JTable tableTransaksi;
    // End of variables declaration//GEN-END:variables
}
